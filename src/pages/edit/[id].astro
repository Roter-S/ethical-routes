---
import Layout from "@layouts/Layout.astro";
import AppLayout from "@layouts/AppLayout.astro";
import EditEthicalRoute from "@components/EditEthicalRoute";
import { firestore } from "@lib/firebase/server";
import type { EthicalRouteTypeWithId } from "@lib/types";

const { id } = Astro.params;
let routeData: EthicalRouteTypeWithId | null = null;
let errorPage: Response | null = null;

if (!id) {
  errorPage = Astro.redirect("/dashboard");
}

if (!errorPage && id) {
  try {
    const routeDoc = await firestore.collection("ethical_routes").doc(id).get();

    if (!routeDoc.exists) {
      errorPage = Astro.redirect("/404");
    } else {
      const data = routeDoc.data();
      routeData = {
        documentId: routeDoc.id,
        question: data?.question || "Pregunta no disponible",
        description: data?.description || "Descripción no disponible",
        participations: data?.participations || 0,
        created_at: data?.created_at || new Date(),
        difference: data?.difference,
        branches: data?.branches,
      } as EthicalRouteTypeWithId & { branches?: Record<string, any> };
    }
  } catch (error) {
    console.error(`Error fetching ethical route with ID ${id}:`, error);
    errorPage = Astro.redirect("/404");
  }
}

if (errorPage) {
  return errorPage;
}

if (!routeData) {
  console.error(
    `Reached a state where routeData is null for ID: ${id} without an errorPage redirect.`,
  );
  return Astro.redirect("/404");
}

const pageTitle = routeData?.question
  ? `Editar: ${routeData.question.substring(0, 30)}...`
  : "Editar Caso Ético";
---

<Layout title={`${pageTitle} - Rutas Éticas`}>
  <AppLayout>
    {
      routeData && id ? (
        <EditEthicalRoute client:load id={id} initialData={routeData} />
      ) : (
        <p class="text-center text-red-500 dark:text-red-400 p-8">
          No se pudo cargar la información del caso ético para editar o el ID no
          es válido.
        </p>
      )
    }
  </AppLayout>
</Layout>
