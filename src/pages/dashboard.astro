---
import Layout from "@layouts/Layout.astro";
import AppLayout from "@layouts/AppLayout.astro";
import EthicalRouteList from "@components/EthicalRouteList";
import { firestore } from "@lib/firebase/server";
import type { EthicalRouteWithDifference } from "@lib/types";
import { getUser } from "@lib/utils";

let routes: EthicalRouteWithDifference[] = [];
let errorLoadingRoutes: string | null = null;

const sessionCookie = Astro.cookies.get("session")?.value ?? null;
let user = null;
if (sessionCookie) {
  user = await getUser(sessionCookie);
}

if (!user) {
  return Astro.redirect("/signin", 302);
}

try {
  const snapshot = await firestore
    .collection("ethical_routes")
    .where("created_by", "==", user.uid)
    .orderBy("created_at", "desc")
    .get();
  routes = snapshot.docs.map((doc) => {
    const routeData = doc.data();
    return {
      documentId: doc.id,
      question: routeData.question || "Pregunta no disponible",
      description: routeData.description || "Descripción no disponible",
      participations: routeData.participations || 0,
      difference: routeData.difference || 0,
      created_at: routeData.created_at,
    } as EthicalRouteWithDifference;
  });
} catch (error) {
  console.error("Error fetching ethical routes:", error);
  errorLoadingRoutes =
    "No se pudieron cargar los casos éticos. Inténtalo de nuevo más tarde.";
}
---

<Layout title="Dashboard - Rutas Éticas">
  <AppLayout>
    <main class="w-full grow flex flex-col items-center">
      <h1
        class="text-xl sm:text-3xl max-w-xl dark:text-zinc-100 w-full text-zinc-900 font-semibold mt-10 mb-6"
      >
        Mis casos éticos
      </h1>
      <div class="w-full max-w-xl mb-6">
        <input
          type="text"
          id="searchInput"
          placeholder="Buscar mis casos éticos..."
          class="w-full px-4 py-2 rounded-lg border border-zinc-300 dark:border-zinc-700 bg-white dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
      </div>
      {
        errorLoadingRoutes ? (
          <p class="text-red-500 dark:text-red-400">{errorLoadingRoutes}</p>
        ) : (
          <div id="routesList" class="w-full max-w-xl">
            <EthicalRouteList routes={routes} />
          </div>
        )
      }
    </main>
  </AppLayout>
</Layout>

<script>
  const searchInput = document.getElementById('searchInput') as HTMLInputElement;
  const routesList = document.getElementById('routesList');
  const routeCards = routesList?.getElementsByTagName('li');

  if (searchInput && routeCards) {
    searchInput.addEventListener('input', (e) => {
      const searchTerm = (e.target as HTMLInputElement).value.toLowerCase().trim();
      
      Array.from(routeCards).forEach((card) => {
        const question = card.querySelector('[data-question]')?.getAttribute('data-question')?.toLowerCase() || '';
        const description = card.querySelector('[data-description]')?.getAttribute('data-description')?.toLowerCase() || '';
        
        const matches = question.includes(searchTerm) || 
                       description.includes(searchTerm);
        
        card.style.display = matches ? '' : 'none';
      });
    });
  }
</script>
